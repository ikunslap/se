local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\252\190","\54\210\144\112\54\227\235\230"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,1,1));return "";else local v92=0;local v93;while true do if (v92==0) then v93=v10(v8(v42,16));if v30 then local v121=v13(v93,v30);v30=nil;return v121;else return v93;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v94=0;local v95;while true do if (v94==0) then v95=(v43/((5 -3)^(v44-1)))%((5 -3)^(((v45-1) -(v44-1)) + 1)) ;return v95-(v95%1) ;end end else local v96=0;local v97;while true do if (v96==0) then v97=2^(v44-1) ;return (((v43%(v97 + v97))>=v97) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + (1 -0) ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (0==v47) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v47=1;end if (v47==1) then return (v49 * 256) + v48 ;end end end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + (10 -6) ;return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end local function v35() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v54==1) then v57=1;v58=(v31(v56,1,20) * (2^32)) + v55 ;v54=2;end if (v54==0) then v55=v34();v56=v34();v54=1;end if (v54==3) then if (v59==(619 -(555 + 64))) then if (v58==0) then return v60 * 0 ;else v59=1;v57=0;end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end if (v54==2) then v59=v31(v56,21,31);v60=((v31(v56,32)==1) and  -1) or 1 ;v54=3;end end end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==1) then v63=v11(v27,v29,(v29 + v61) -(932 -(857 + 74)) );v29=v29 + v61 ;v62=2;end if (v62==0) then v63=nil;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=1;end if (2==v62) then v64={};for v101=569 -(367 + 201) , #v63 do v64[v101]=v10(v9(v11(v63,v101,v101)));end v62=3;end if (v62==3) then return v14(v64);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65=0;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (v65==1) then v70=v34();v71={};for v103=1,v70 do local v104=0;local v105;local v106;while true do if (v104==0) then v105=v32();v106=nil;v104=1;end if (v104==1) then if (v105==(928 -(214 + 713))) then v106=v32()~=0 ;elseif (v105==2) then v106=v35();elseif (v105==(1 + 2)) then v106=v36();end v71[v103]=v106;break;end end end v69[3]=v32();v65=2;end if (v65==2) then for v107=1,v34() do local v108=v32();if (v31(v108,1 + 0 ,1)==(877 -(282 + 595))) then local v117=0;local v118;local v119;local v120;while true do if (v117==1) then v120={v33(),v33(),nil,nil};if (v118==0) then v120[3]=v33();v120[4 + 0 ]=v33();elseif (v118==1) then v120[3]=v34();elseif (v118==2) then v120[3]=v34() -(2^16) ;elseif (v118==3) then v120[3]=v34() -((2 -0)^16) ;v120[4]=v33();end v117=2;end if (v117==2) then if (v31(v119,1,1)==1) then v120[2]=v71[v120[2]];end if (v31(v119,2,2)==1) then v120[3]=v71[v120[3]];end v117=3;end if (0==v117) then v118=v31(v108,2,3);v119=v31(v108,4,6);v117=1;end if (v117==3) then if (v31(v119,3,3)==1) then v120[4]=v71[v120[4]];end v66[v107]=v120;break;end end end end for v109=1,v34() do v67[v109-1 ]=v39();end return v69;end if (v65==0) then v66={};v67={};v68={};v69={v66,v67,nil,v68};v65=1;end end end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v78=v75;local v79=v76;local v80=v77;local v81=v38;local v82=1;local v83= -1;local v84={};local v85={...};local v86=v20("#",...) -1 ;local v87={};local v88={};for v98=1065 -(68 + 997) ,v86 do if (v98>=v80) then v84[v98-v80 ]=v85[v98 + 1 ];else v88[v98]=v85[v98 + 1 ];end end local v89=(v86-v80) + 1 ;local v90;local v91;while true do local v99=0;while true do if (0==v99) then v90=v78[v82];v91=v90[1];v99=1;end if (v99==1) then if (v91<=39) then if (v91<=19) then if (v91<=9) then if (v91<=4) then if (v91<=1) then if (v91>0) then v88[v90[1272 -(226 + 1044) ]][v88[v90[3]]]=v90[4];else local v138=v90[2];v88[v138]=v88[v138](v21(v88,v138 + (4 -3) ,v90[3]));end elseif (v91<=(119 -(32 + 85))) then local v140=v90[2];do return v21(v88,v140,v83);end elseif (v91>(3 + 0)) then v88[v90[2]]=v90[3]~=0 ;else local v224=0;local v225;while true do if (v224==0) then v225=v90[2];v88[v225](v21(v88,v225 + 1 ,v90[3]));break;end end end elseif (v91<=6) then if (v91>5) then local v141=0;local v142;while true do if (v141==0) then v142=v90[2];do return v88[v142](v21(v88,v142 + 1 ,v90[3]));end break;end end else v88[v90[1 + 1 ]]=v40(v79[v90[3]],nil,v74);end elseif (v91<=7) then v88[v90[2]][v88[v90[3]]]=v88[v90[4]];elseif (v91>8) then v88[v90[2]]=v90[3]~=0 ;else v88[v90[959 -(892 + 65) ]]=v90[7 -4 ] + v88[v90[4]] ;end elseif (v91<=14) then if (v91<=(20 -9)) then if (v91>10) then v88[v90[3 -1 ]]= #v88[v90[3]];else local v147=v90[2];do return v88[v147](v21(v88,v147 + 1 ,v90[3]));end end elseif (v91<=12) then v88[v90[2]]=v90[3] + v88[v90[4]] ;elseif (v91>13) then local v228=0;local v229;local v230;while true do if (v228==0) then v229=v90[2];v230=v88[v229];v228=1;end if (1==v228) then for v354=v229 + 1 ,v83 do v15(v230,v88[v354]);end break;end end else v88[v90[2]]=v88[v90[3]] + v90[4] ;end elseif (v91<=(366 -(87 + 263))) then if (v91>15) then v88[v90[2]]=v90[3];elseif (v88[v90[182 -(67 + 113) ]]==v90[3 + 1 ]) then v82=v82 + 1 ;else v82=v90[7 -4 ];end elseif (v91<=17) then v88[v90[2]][v88[v90[3]]]=v88[v90[4]];elseif (v91>18) then v88[v90[2]]=v88[v90[3]][v90[4]];else local v235=0;local v236;local v237;local v238;local v239;while true do if (v235==0) then v236=v90[2];v237,v238=v81(v88[v236](v88[v236 + 1 ]));v235=1;end if (v235==1) then v83=(v238 + v236) -1 ;v239=0;v235=2;end if (2==v235) then for v355=v236,v83 do v239=v239 + 1 ;v88[v355]=v237[v239];end break;end end end elseif (v91<=(22 + 7)) then if (v91<=24) then if (v91<=21) then if (v91==20) then for v213=v90[7 -5 ],v90[3] do v88[v213]=nil;end else v88[v90[2]]=v90[3];end elseif (v91<=22) then local v155=v90[954 -(802 + 150) ];v88[v155]=v88[v155](v21(v88,v155 + 1 ,v90[3]));elseif (v91>23) then v88[v90[2]][v90[3]]=v88[v90[4]];else v88[v90[5 -3 ]]=v74[v90[3]];end elseif (v91<=26) then if (v91==(45 -20)) then v88[v90[2]]=v88[v90[3]]%v90[4] ;else local v158=v90[2];v88[v158](v21(v88,v158 + 1 ,v83));end elseif (v91<=27) then do return v88[v90[2]]();end elseif (v91>(21 + 7)) then local v244=v90[2];local v245=v88[v244 + 2 ];local v246=v88[v244] + v245 ;v88[v244]=v246;if (v245>0) then if (v246<=v88[v244 + 1 ]) then local v358=0;while true do if (v358==0) then v82=v90[3];v88[v244 + (1000 -(915 + 82)) ]=v246;break;end end end elseif (v246>=v88[v244 + (2 -1) ]) then local v359=0;while true do if (v359==0) then v82=v90[3];v88[v244 + 3 ]=v246;break;end end end else local v248=v79[v90[3]];local v249;local v250={};v249=v18({},{[v7("\32\100\186\38\169\26\67","\205\127\59\211\72")]=function(v292,v293) local v294=v250[v293];return v294[1][v294[2]];end,[v7("\239\118\35\75\144\245\222\77\40\86","\156\176\41\77\46\231")]=function(v295,v296,v297) local v298=0;local v299;while true do if (0==v298) then v299=v250[v296];v299[1][v299[2]]=v297;break;end end end});for v300=1,v90[4] do local v301=0;local v302;while true do if (v301==1) then if (v302[1]==(38 + 26)) then v250[v300-1 ]={v88,v302[3]};else v250[v300-1 ]={v73,v302[6 -3 ]};end v87[ #v87 + (1 -0) ]=v250;break;end if (v301==0) then v82=v82 + 1 ;v302=v78[v82];v301=1;end end end v88[v90[2]]=v40(v248,v249,v74);end elseif (v91<=34) then if (v91<=31) then if (v91==(6 + 24)) then local v159=v90[2];local v160,v161=v81(v88[v159](v21(v88,v159 + 1 ,v90[3])));v83=(v161 + v159) -1 ;local v162=0;for v215=v159,v83 do v162=v162 + 1 ;v88[v215]=v160[v162];end else local v163=0;local v164;local v165;local v166;while true do if (v163==1) then v166={};v165=v18({},{[v7("\127\133\93\184\181\67\88","\38\32\218\52\214\209")]=function(v323,v324) local v325=0;local v326;while true do if (0==v325) then v326=v166[v324];return v326[1][v326[2]];end end end,[v7("\40\14\166\75\0\56\166\74\18\41","\46\119\81\200")]=function(v327,v328,v329) local v330=0;local v331;while true do if (v330==0) then v331=v166[v328];v331[1][v331[2]]=v329;break;end end end});v163=2;end if (v163==0) then v164=v79[v90[3]];v165=nil;v163=1;end if (v163==2) then for v332=1,v90[4] do local v333=0;local v334;while true do if (v333==0) then v82=v82 + (1 -0) ;v334=v78[v82];v333=1;end if (v333==1) then if (v334[1]==64) then v166[v332-1 ]={v88,v334[3]};else v166[v332-1 ]={v73,v334[3]};end v87[ #v87 + 1 ]=v166;break;end end end v88[v90[2]]=v40(v164,v165,v74);break;end end end elseif (v91<=32) then local v167=v90[2];v88[v167]=v88[v167]();elseif (v91>(824 -(368 + 423))) then if v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else local v252=v90[3];local v253=v88[v252];for v305=v252 + 1 ,v90[4] do v253=v253   .. v88[v305] ;end v88[v90[2]]=v253;end elseif (v91<=36) then if (v91>35) then v82=v90[3];else v88[v90[2]]=v88[v90[3]]%v88[v90[4]] ;end elseif (v91<=37) then do return;end elseif (v91>38) then v88[v90[2]]=v73[v90[9 -6 ]];else local v257=v90[2];local v258=v88[v257];local v259=v88[v257 + 2 ];if (v259>0) then if (v258>v88[v257 + 1 ]) then v82=v90[3];else v88[v257 + 3 ]=v258;end elseif (v258<v88[v257 + (19 -(10 + 8)) ]) then v82=v90[3];else v88[v257 + 3 ]=v258;end end elseif (v91<=59) then if (v91<=49) then if (v91<=44) then if (v91<=41) then if (v91==40) then local v171=v90[2];v88[v171]=v88[v171](v21(v88,v171 + 1 ,v83));else v88[v90[2]]={};end elseif (v91<=42) then v88[v90[7 -5 ]]=v73[v90[3]];elseif (v91==43) then if  not v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else local v260=0;local v261;while true do if (v260==0) then v261=v90[2];v88[v261](v21(v88,v261 + 1 ,v83));break;end end end elseif (v91<=(488 -(416 + 26))) then if (v91==45) then local v176=0;local v177;while true do if (0==v176) then v177=v90[2];v88[v177](v21(v88,v177 + 1 ,v90[9 -6 ]));break;end end elseif  not v88[v90[1 + 1 ]] then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=(83 -36)) then if (v88[v90[2]]==v90[442 -(145 + 293) ]) then v82=v82 + 1 ;else v82=v90[433 -(44 + 386) ];end elseif (v91>48) then v88[v90[1488 -(998 + 488) ]][v90[3]]=v88[v90[4]];else v88[v90[2]]={};end elseif (v91<=54) then if (v91<=51) then if (v91>50) then local v178=0;local v179;while true do if (v178==0) then v179=v90[2];v88[v179]=v88[v179](v21(v88,v179 + 1 ,v83));break;end end else do return;end end elseif (v91<=52) then for v218=v90[2],v90[3] do v88[v218]=nil;end elseif (v91>53) then v88[v90[2]]();else v82=v90[3];end elseif (v91<=56) then if (v91==55) then v88[v90[2]]=v88[v90[3]]%v90[4] ;else v88[v90[2]]=v88[v90[3]] + v90[4] ;end elseif (v91<=57) then local v182=v90[2];local v183,v184=v81(v88[v182](v21(v88,v182 + 1 ,v90[3])));v83=(v184 + v182) -1 ;local v185=0;for v220=v182,v83 do local v221=0;while true do if (v221==0) then v185=v185 + 1 ;v88[v220]=v183[v185];break;end end end elseif (v91>58) then do return v88[v90[2]]();end else local v268=v90[1 + 1 ];do return v21(v88,v268,v83);end end elseif (v91<=(57 + 12)) then if (v91<=64) then if (v91<=61) then if (v91>(832 -(201 + 571))) then local v186=0;local v187;local v188;local v189;while true do if (v186==0) then v187=v90[2];v188=v88[v187];v186=1;end if (v186==1) then v189=v88[v187 + 2 ];if (v189>(1138 -(116 + 1022))) then if (v188>v88[v187 + 1 ]) then v82=v90[3];else v88[v187 + 3 ]=v188;end elseif (v188<v88[v187 + 1 ]) then v82=v90[3];else v88[v187 + 3 ]=v188;end break;end end else v88[v90[8 -6 ]]();end elseif (v91<=62) then v88[v90[2]][v88[v90[3]]]=v90[4];elseif (v91>63) then v88[v90[2 + 0 ]]=v88[v90[3]];else v88[v90[2]]= #v88[v90[3]];end elseif (v91<=66) then if (v91>(237 -172)) then if v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else local v192=v90[2];v88[v192]=v88[v192]();end elseif (v91<=67) then local v194=0;local v195;local v196;local v197;local v198;while true do if (v194==0) then v195=v90[2];v196,v197=v81(v88[v195](v21(v88,v195 + 1 ,v83)));v194=1;end if (v194==2) then for v339=v195,v83 do v198=v198 + 1 ;v88[v339]=v196[v198];end break;end if (v194==1) then v83=(v197 + v195) -1 ;v198=0 -0 ;v194=2;end end elseif (v91>68) then v88[v90[2]]=v88[v90[3]];else local v275=v90[2];local v276=v88[v275 + (861 -(814 + 45)) ];local v277=v88[v275] + v276 ;v88[v275]=v277;if (v276>0) then if (v277<=v88[v275 + 1 ]) then v82=v90[3];v88[v275 + 3 ]=v277;end elseif (v277>=v88[v275 + 1 ]) then local v370=0;while true do if (v370==0) then v82=v90[3];v88[v275 + 3 ]=v277;break;end end end end elseif (v91<=74) then if (v91<=71) then if (v91==70) then v88[v90[2]]=v88[v90[3]][v90[4]];else local v201=0;local v202;local v203;while true do if (v201==1) then v88[v202 + 1 ]=v203;v88[v202]=v203[v90[4]];break;end if (v201==0) then v202=v90[4 -2 ];v203=v88[v90[3]];v201=1;end end end elseif (v91<=72) then v88[v90[1 + 1 ]]=v40(v79[v90[3]],nil,v74);elseif (v91==73) then local v279=v90[3];local v280=v88[v279];for v318=v279 + 1 ,v90[2 + 2 ] do v280=v280   .. v88[v318] ;end v88[v90[2]]=v280;else v88[v90[887 -(261 + 624) ]]=v74[v90[3]];end elseif (v91<=76) then if (v91==75) then local v205=v90[2];local v206=v88[v205];for v222=v205 + 1 ,v83 do v15(v206,v88[v222]);end else v88[v90[2]]=v88[v90[3]]%v88[v90[4]] ;end elseif (v91<=77) then local v208=0;local v209;local v210;local v211;local v212;while true do if (v208==2) then for v342=v209,v83 do local v343=0;while true do if (v343==0) then v212=v212 + 1 ;v88[v342]=v210[v212];break;end end end break;end if (v208==1) then v83=(v211 + v209) -1 ;v212=0;v208=2;end if (v208==0) then v209=v90[2];v210,v211=v81(v88[v209](v88[v209 + 1 ]));v208=1;end end elseif (v91==78) then local v284=0;local v285;local v286;while true do if (v284==1) then v88[v285 + 1 ]=v286;v88[v285]=v286[v90[4]];break;end if (v284==0) then v285=v90[2];v286=v88[v90[4 -1 ]];v284=1;end end else local v287=v90[1082 -(1020 + 60) ];local v288,v289=v81(v88[v287](v21(v88,v287 + 1 ,v83)));v83=(v289 + v287) -1 ;local v290=0;for v320=v287,v83 do v290=v290 + 1 ;v88[v320]=v288[v290];end end v82=v82 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
