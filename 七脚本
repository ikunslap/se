local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,15 -10 ),v7("\164\185","\155\138\151\166\130\66\135\60"),function(v42) if (v9(v42,2)==(226 -147)) then local v91=0;while true do if (0==v91) then v30=v8(v11(v42,1,1 -0 ));return "";end end else local v92=0;local v93;while true do if (v92==0) then v93=v10(v8(v42,16));if v30 then local v121=v13(v93,v30);v30=nil;return v121;else return v93;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v94=0;local v95;while true do if (v94==0) then v95=(v43/(2^(v44-(2 -1))))%((621 -(555 + 64))^(((v45-1) -(v44-1)) + 1)) ;return v95-(v95%1) ;end end else local v96=2^(v44-1) ;return (((v43%(v96 + v96))>=v96) and 1) or 0 ;end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + (932 -(857 + 74)) ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v47=1;end if (v47==1) then return (v49 * 256) + v48 ;end end end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v53 * (16777784 -(367 + 201))) + (v52 * 65536) + (v51 * 256) + v50 ;end local function v35() local v54=v34();local v55=v34();local v56=1;local v57=(v31(v55,1,20) * (2^32)) + v54 ;local v58=v31(v55,21,31);local v59=((v31(v55,32)==(928 -(214 + 713))) and  -1) or (1 + 0) ;if (v58==0) then if (v57==0) then return v59 * 0 ;else local v101=0;while true do if (v101==0) then v58=1;v56=0;break;end end end elseif (v58==2047) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end local function v36(v60) local v61=0;local v62;local v63;while true do if (2==v61) then v63={};for v102=1, #v62 do v63[v102]=v10(v9(v11(v62,v102,v102)));end v61=3;end if (v61==0) then v62=nil;if  not v60 then local v116=0;while true do if (v116==0) then v60=v34();if (v60==0) then return "";end break;end end end v61=1;end if (v61==1) then v62=v11(v27,v29,(v29 + v60) -(1 + 0) );v29=v29 + v60 ;v61=2;end if (v61==3) then return v14(v63);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64=0;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (v64==2) then for v104=1,v34() do local v105=v32();if (v31(v105,1 + 0 ,1)==0) then local v117=0;local v118;local v119;local v120;while true do if (v117==3) then if (v31(v119,3,3)==1) then v120[4]=v70[v120[4]];end v65[v104]=v120;break;end if (v117==0) then v118=v31(v105,2,3);v119=v31(v105,4,7 -1 );v117=1;end if (v117==1) then v120={v33(),v33(),nil,nil};if (v118==0) then local v126=0;while true do if (v126==0) then v120[3]=v33();v120[4]=v33();break;end end elseif (v118==1) then v120[3]=v34();elseif (v118==2) then v120[3]=v34() -((1067 -(68 + 997))^(1286 -(226 + 1044))) ;elseif (v118==3) then local v284=0;while true do if (v284==0) then v120[3]=v34() -(2^16) ;v120[4]=v33();break;end end end v117=2;end if (2==v117) then if (v31(v119,1,1)==(4 -3)) then v120[2]=v70[v120[2]];end if (v31(v119,2,2)==1) then v120[3]=v70[v120[3]];end v117=3;end end end end for v106=1,v34() do v66[v106-1 ]=v39();end return v68;end if (v64==1) then v69=v34();v70={};for v108=1,v69 do local v109=0;local v110;local v111;while true do if (v109==0) then v110=v32();v111=nil;v109=1;end if (1==v109) then if (v110==1) then v111=v32()~=(1637 -(1523 + 114)) ;elseif (v110==2) then v111=v35();elseif (v110==3) then v111=v36();end v70[v108]=v111;break;end end end v68[3]=v32();v64=2;end if (v64==0) then v65={};v66={};v67={};v68={v65,v66,nil,v67};v64=1;end end end local function v40(v71,v72,v73) local v74=v71[1];local v75=v71[2];local v76=v71[120 -(32 + 85) ];return function(...) local v77=v74;local v78=v75;local v79=v76;local v80=v38;local v81=1;local v82= -(1 + 0);local v83={};local v84={...};local v85=v20("#",...) -1 ;local v86={};local v87={};for v97=0,v85 do if (v97>=v79) then v83[v97-v79 ]=v84[v97 + 1 ];else v87[v97]=v84[v97 + 1 ];end end local v88=(v85-v79) + 1 ;local v89;local v90;while true do v89=v77[v81];v90=v89[958 -(892 + 65) ];if (v90<=(92 -53)) then if (v90<=19) then if (v90<=9) then if (v90<=4) then if (v90<=1) then if (v90==0) then v87[v89[2]]=v87[v89[3]][v89[4]];else v87[v89[2]]={};end elseif (v90<=(3 -1)) then v87[v89[3 -1 ]]={};elseif (v90==3) then local v220=0;local v221;local v222;local v223;local v224;while true do if (v220==2) then for v356=v221,v82 do local v357=0;while true do if (v357==0) then v224=v224 + 1 ;v87[v356]=v222[v224];break;end end end break;end if (v220==1) then v82=(v223 + v221) -1 ;v224=0;v220=2;end if (v220==0) then v221=v89[2];v222,v223=v80(v87[v221](v21(v87,v221 + 1 ,v89[3])));v220=1;end end else v87[v89[2]]=v89[3]~=0 ;end elseif (v90<=6) then if (v90>(355 -(87 + 263))) then v87[v89[2]]=v40(v78[v89[3]],nil,v73);else v87[v89[182 -(67 + 113) ]]=v89[3]~=0 ;end elseif (v90<=7) then for v218=v89[2],v89[3] do v87[v218]=nil;end elseif (v90>8) then local v226=0;local v227;local v228;local v229;while true do if (v226==1) then v229={};v228=v18({},{[v7("\6\15\77\127\61\53\92","\17\89\80\36")]=function(v358,v359) local v360=v229[v359];return v360[1][v360[2]];end,[v7("\74\69\116\203\98\115\116\202\112\98","\174\21\26\26")]=function(v361,v362,v363) local v364=0;local v365;while true do if (v364==0) then v365=v229[v362];v365[1][v365[2]]=v363;break;end end end});v226=2;end if (v226==2) then for v366=1,v89[4] do local v367=0;local v368;while true do if (v367==0) then v81=v81 + 1 ;v368=v77[v81];v367=1;end if (v367==1) then if (v368[1 + 0 ]==31) then v229[v366-1 ]={v87,v368[3]};else v229[v366-(2 -1) ]={v72,v368[3]};end v86[ #v86 + 1 ]=v229;break;end end end v87[v89[2]]=v40(v227,v228,v73);break;end if (v226==0) then v227=v78[v89[3]];v228=nil;v226=1;end end else local v230=v89[2];local v231,v232=v80(v87[v230](v21(v87,v230 + (3 -2) ,v82)));v82=(v232 + v230) -1 ;local v233=0;for v285=v230,v82 do local v286=0;while true do if (0==v286) then v233=v233 + 1 ;v87[v285]=v231[v233];break;end end end end elseif (v90<=14) then if (v90<=11) then if (v90>10) then v81=v89[3];else local v141=0;local v142;while true do if (v141==0) then v142=v89[2];v87[v142]=v87[v142](v21(v87,v142 + 1 ,v89[955 -(802 + 150) ]));break;end end end elseif (v90<=12) then local v143=0;local v144;local v145;while true do if (0==v143) then v144=v89[2];v145=v87[v89[3]];v143=1;end if (v143==1) then v87[v144 + (2 -1) ]=v145;v87[v144]=v145[v89[6 -2 ]];break;end end elseif (v90>13) then local v234=0;local v235;local v236;while true do if (v234==1) then for v371=v235 + 1 + 0 ,v89[4] do v236=v236   .. v87[v371] ;end v87[v89[2]]=v236;break;end if (v234==0) then v235=v89[3];v236=v87[v235];v234=1;end end else v87[v89[2]]=v40(v78[v89[3]],nil,v73);end elseif (v90<=16) then if (v90>15) then local v146=0;local v147;while true do if (v146==0) then v147=v89[2];v87[v147](v21(v87,v147 + 1 ,v82));break;end end elseif  not v87[v89[999 -(915 + 82) ]] then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=17) then v87[v89[2]]=v87[v89[3]]%v89[4] ;elseif (v90==18) then v87[v89[2]]();else local v239=v89[2];do return v87[v239](v21(v87,v239 + 1 ,v89[3]));end end elseif (v90<=29) then if (v90<=24) then if (v90<=21) then if (v90>20) then v87[v89[2]]=v87[v89[3]];else local v151=0;local v152;local v153;while true do if (v151==1) then for v316=v152 + (2 -1) ,v89[3 + 1 ] do v153=v153   .. v87[v316] ;end v87[v89[2]]=v153;break;end if (v151==0) then v152=v89[3];v153=v87[v152];v151=1;end end end elseif (v90<=(28 -6)) then v87[v89[2]]=v89[3] + v87[v89[4]] ;elseif (v90>(1210 -(1069 + 118))) then local v240=0;local v241;while true do if (v240==0) then v241=v89[2];v87[v241]=v87[v241](v21(v87,v241 + 1 ,v82));break;end end else local v242=v89[4 -2 ];local v243=v87[v242];local v244=v87[v242 + 2 ];if (v244>0) then if (v243>v87[v242 + 1 ]) then v81=v89[3];else v87[v242 + 3 ]=v243;end elseif (v243<v87[v242 + 1 ]) then v81=v89[3];else v87[v242 + 3 ]=v243;end end elseif (v90<=26) then if (v90>25) then local v155=0;local v156;local v157;local v158;local v159;while true do if (0==v155) then v156=v89[2];v157,v158=v80(v87[v156](v21(v87,v156 + 1 ,v89[3])));v155=1;end if (v155==2) then for v317=v156,v82 do local v318=0;while true do if (v318==0) then v159=v159 + 1 ;v87[v317]=v157[v159];break;end end end break;end if (v155==1) then v82=(v158 + v156) -(1 -0) ;v159=0;v155=2;end end else do return;end end elseif (v90<=27) then v87[v89[2]]();elseif (v90==28) then local v245=v89[2];v87[v245](v21(v87,v245 + 1 ,v82));else local v246=0;local v247;local v248;local v249;while true do if (0==v246) then v247=v89[2];v248=v87[v247];v246=1;end if (v246==1) then v249=v87[v247 + 2 ];if (v249>0) then if (v248>v87[v247 + 1 ]) then v81=v89[3];else v87[v247 + 1 + 2 ]=v248;end elseif (v248<v87[v247 + 1 ]) then v81=v89[3];else v87[v247 + 3 ]=v248;end break;end end end elseif (v90<=34) then if (v90<=31) then if (v90>30) then v87[v89[2]]=v87[v89[3]];else v87[v89[2]]= #v87[v89[3]];end elseif (v90<=32) then local v163=v89[2];local v164=v87[v163 + 2 ];local v165=v87[v163] + v164 ;v87[v163]=v165;if (v164>0) then if (v165<=v87[v163 + 1 ]) then local v319=0;while true do if (v319==0) then v81=v89[3];v87[v163 + 3 ]=v165;break;end end end elseif (v165>=v87[v163 + 1 ]) then v81=v89[3];v87[v163 + (4 -1) ]=v165;end elseif (v90==33) then local v250=v89[2];v87[v250]=v87[v250](v21(v87,v250 + 1 ,v89[3]));elseif v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=36) then if (v90==35) then do return v87[v89[2 + 0 ]]();end else local v167=v89[2];do return v87[v167](v21(v87,v167 + 1 ,v89[3]));end end elseif (v90<=37) then v87[v89[2]]=v89[3];elseif (v90>38) then if (v87[v89[2]]==v89[4]) then v81=v81 + 1 ;else v81=v89[3];end else local v252=0;local v253;while true do if (v252==0) then v253=v89[2];v87[v253](v21(v87,v253 + 1 ,v89[3]));break;end end end elseif (v90<=59) then if (v90<=49) then if (v90<=44) then if (v90<=(832 -(368 + 423))) then if (v90>40) then v87[v89[6 -4 ]][v87[v89[3]]]=v89[4];else local v172=0;local v173;local v174;local v175;local v176;while true do if (v172==1) then v82=(v175 + v173) -1 ;v176=0;v172=2;end if (v172==2) then for v324=v173,v82 do local v325=0;while true do if (v325==0) then v176=v176 + 1 ;v87[v324]=v174[v176];break;end end end break;end if (v172==0) then v173=v89[2];v174,v175=v80(v87[v173](v87[v173 + 1 ]));v172=1;end end end elseif (v90<=42) then local v177=0;local v178;while true do if (v177==0) then v178=v89[20 -(10 + 8) ];do return v21(v87,v178,v82);end break;end end elseif (v90==(165 -122)) then local v254=0;local v255;local v256;local v257;while true do if (1==v254) then v257=v87[v255] + v256 ;v87[v255]=v257;v254=2;end if (v254==2) then if (v256>0) then if (v257<=v87[v255 + 1 ]) then local v410=0;while true do if (v410==0) then v81=v89[3];v87[v255 + 3 ]=v257;break;end end end elseif (v257>=v87[v255 + 1 ]) then local v411=0;while true do if (v411==0) then v81=v89[3];v87[v255 + (9 -6) ]=v257;break;end end end break;end if (v254==0) then v255=v89[444 -(416 + 26) ];v256=v87[v255 + 2 ];v254=1;end end elseif  not v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=46) then if (v90==45) then v87[v89[2]]=v87[v89[3]]%v89[4] ;else v87[v89[2]]=v89[2 + 1 ] + v87[v89[4]] ;end elseif (v90<=47) then local v181=0;local v182;local v183;while true do if (v181==1) then for v327=v182 + 1 ,v82 do v15(v183,v87[v327]);end break;end if (v181==0) then v182=v89[2];v183=v87[v182];v181=1;end end elseif (v90>48) then local v258=v89[2];do return v21(v87,v258,v82);end else local v259=0;local v260;local v261;local v262;while true do if (v259==1) then v262={};v261=v18({},{[v7("\8\158\189\30\51\164\172","\112\87\193\212")]=function(v376,v377) local v378=v262[v377];return v378[1][v378[2]];end,[v7("\148\75\177\186\82\72\220\39\174\108","\67\203\20\223\223\37\33\178")]=function(v379,v380,v381) local v382=0;local v383;while true do if (v382==0) then v383=v262[v380];v383[1][v383[2]]=v381;break;end end end});v259=2;end if (v259==2) then for v384=1,v89[4] do v81=v81 + 1 ;local v385=v77[v81];if (v385[1]==(54 -23)) then v262[v384-1 ]={v87,v385[3]};else v262[v384-1 ]={v72,v385[3]};end v86[ #v86 + 1 ]=v262;end v87[v89[2]]=v40(v260,v261,v73);break;end if (v259==0) then v260=v78[v89[3]];v261=nil;v259=1;end end end elseif (v90<=54) then if (v90<=(489 -(145 + 293))) then if (v90==50) then v87[v89[2]][v89[3]]=v87[v89[4]];else local v186=0;local v187;local v188;while true do if (0==v186) then v187=v89[2];v188=v87[v89[433 -(44 + 386) ]];v186=1;end if (v186==1) then v87[v187 + 1 ]=v188;v87[v187]=v188[v89[4]];break;end end end elseif (v90<=52) then v87[v89[2]][v87[v89[3]]]=v87[v89[1490 -(998 + 488) ]];elseif (v90==53) then v87[v89[2]]=v87[v89[3]] + v89[4] ;else v87[v89[2]]=v89[3];end elseif (v90<=56) then if (v90==55) then v87[v89[1 + 1 ]]=v73[v89[3]];else v87[v89[2]]=v87[v89[3]]%v87[v89[4]] ;end elseif (v90<=57) then v81=v89[3];elseif (v90>(48 + 10)) then local v266=0;local v267;while true do if (0==v266) then v267=v89[2];v87[v267]=v87[v267]();break;end end else for v308=v89[2],v89[3] do v87[v308]=nil;end end elseif (v90<=69) then if (v90<=64) then if (v90<=61) then if (v90>60) then v87[v89[2]][v89[3]]=v87[v89[4]];else v87[v89[2]]=v87[v89[3]]%v87[v89[4]] ;end elseif (v90<=62) then if (v87[v89[774 -(201 + 571) ]]==v89[4]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90>(1201 -(116 + 1022))) then v87[v89[2]]=v72[v89[3]];else v87[v89[2]]=v87[v89[3]][v89[4]];end elseif (v90<=66) then if (v90==65) then v87[v89[2]][v87[v89[3]]]=v89[4];else do return v87[v89[8 -6 ]]();end end elseif (v90<=67) then local v200=0;local v201;while true do if (v200==0) then v201=v89[2];v87[v201]=v87[v201](v21(v87,v201 + 1 ,v82));break;end end elseif (v90==(40 + 28)) then do return;end else v87[v89[2]]=v87[v89[3]] + v89[4] ;end elseif (v90<=74) then if (v90<=(259 -188)) then if (v90>70) then v87[v89[2]]= #v87[v89[3]];else local v203=0;local v204;local v205;local v206;local v207;while true do if (v203==2) then for v328=v204,v82 do local v329=0;while true do if (v329==0) then v207=v207 + 1 ;v87[v328]=v205[v207];break;end end end break;end if (v203==0) then v204=v89[7 -5 ];v205,v206=v80(v87[v204](v87[v204 + 1 ]));v203=1;end if (v203==1) then v82=(v206 + v204) -1 ;v207=0;v203=2;end end end elseif (v90<=72) then local v208=0;local v209;while true do if (v208==0) then v209=v89[2];v87[v209]=v87[v209]();break;end end elseif (v90>73) then local v274=0;local v275;local v276;while true do if (v274==1) then for v387=v275 + 1 ,v82 do v15(v276,v87[v387]);end break;end if (v274==0) then v275=v89[2];v276=v87[v275];v274=1;end end else v87[v89[2]]=v73[v89[3]];end elseif (v90<=76) then if (v90>(934 -(814 + 45))) then if v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end else local v210=0;local v211;local v212;local v213;local v214;while true do if (v210==0) then v211=v89[2];v212,v213=v80(v87[v211](v21(v87,v211 + 1 ,v82)));v210=1;end if (v210==1) then v82=(v213 + v211) -1 ;v214=0;v210=2;end if (v210==2) then for v330=v211,v82 do local v331=0;while true do if (v331==0) then v214=v214 + 1 ;v87[v330]=v212[v214];break;end end end break;end end end elseif (v90<=77) then v87[v89[2]]=v72[v89[3]];elseif (v90==78) then local v280=0;local v281;while true do if (v280==0) then v281=v89[2];v87[v281](v21(v87,v281 + 1 ,v89[3]));break;end end else v87[v89[2]][v87[v89[7 -4 ]]]=v87[v89[4]];end v81=v81 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
