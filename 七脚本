local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\158\7","\156\176\41\77\46\231"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,1,1));return "";else local v104=0;local v105;while true do if (v104==0) then v105=v10(v8(v42,16));if v30 then local v122=v13(v105,v30);v30=nil;return v122;else return v105;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v106=(v43/(2^(v44-1)))%((5 -3)^(((v45-1) -(v44-(1 -0))) + 1)) ;return v106-(v106%1) ;else local v107=0;local v108;while true do if (v107==0) then v108=2^(v44-1) ;return (((v43%(v108 + v108))>=v108) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + (7 -4) );v29=v29 + 4 ;v51=1;end if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==3) then if (v61==0) then if (v60==0) then return v62 * 0 ;else v61=1;v59=0;end elseif (v61==2047) then return ((v60==0) and (v62 * ((932 -(857 + 74))/0))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^52))) ;end if (0==v56) then v57=v34();v58=v34();v56=1;end if (v56==2) then v61=v31(v58,21,31);v62=((v31(v58,32)==1) and  -1) or 1 ;v56=3;end if (v56==1) then v59=1;v60=(v31(v58,1,639 -(555 + 64) ) * (2^32)) + v57 ;v56=2;end end end local function v36(v63) local v64;if  not v63 then local v109=0;while true do if (v109==0) then v63=v34();if (v63==0) then return "";end break;end end end v64=v11(v27,v29,(v29 + v63) -1 );v29=v29 + v63 ;local v65={};for v79=1, #v64 do v65[v79]=v10(v9(v11(v64,v79,v79)));end return v14(v65);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v81=569 -(367 + 201) ,v70 do local v82=0;local v83;local v84;while true do if (0==v82) then v83=v32();v84=nil;v82=1;end if (v82==1) then if (v83==1) then v84=v32()~=0 ;elseif (v83==2) then v84=v35();elseif (v83==3) then v84=v36();end v71[v81]=v84;break;end end end v69[3]=v32();for v85=928 -(214 + 713) ,v34() do local v86=0;local v87;while true do if (v86==0) then v87=v32();if (v31(v87,1,1)==(0 + 0)) then local v118=0;local v119;local v120;local v121;while true do if (2==v118) then if (v31(v120,1,1)==(1638 -(1523 + 114))) then v121[2]=v71[v121[2]];end if (v31(v120,2,2)==1) then v121[3]=v71[v121[3]];end v118=3;end if (v118==3) then if (v31(v120,3,3 + 0 )==1) then v121[4]=v71[v121[4]];end v66[v85]=v121;break;end if (0==v118) then v119=v31(v87,2,3);v120=v31(v87,4,6);v118=1;end if (v118==1) then v121={v33(),v33(),nil,nil};if (v119==0) then local v130=0;while true do if (v130==0) then v121[3]=v33();v121[4]=v33();break;end end elseif (v119==1) then v121[3]=v34();elseif (v119==2) then v121[3]=v34() -(2^16) ;elseif (v119==3) then v121[3]=v34() -(2^16) ;v121[881 -(282 + 595) ]=v33();end v118=2;end end end break;end end end for v88=1,v34() do v67[v88-(1 -0) ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2];local v78=v73[3];return function(...) local v90=v76;local v91=v77;local v92=v78;local v93=v38;local v94=1;local v95= -1;local v96={};local v97={...};local v98=v20("#",...) -1 ;local v99={};local v100={};for v110=0,v98 do if (v110>=v92) then v96[v110-v92 ]=v97[v110 + 1 ];else v100[v110]=v97[v110 + 1 ];end end local v101=(v98-v92) + 1 ;local v102;local v103;while true do v102=v90[v94];v103=v102[1];if (v103<=(1104 -(68 + 997))) then if (v103<=19) then if (v103<=9) then if (v103<=4) then if (v103<=(1271 -(226 + 1044))) then if (v103==0) then local v134=v102[2];local v135=v100[v102[12 -9 ]];v100[v134 + 1 ]=v135;v100[v134]=v135[v102[121 -(32 + 85) ]];else v100[v102[2]]();end elseif (v103<=2) then local v139=v102[3];local v140=v100[v139];for v219=v139 + 1 ,v102[4 + 0 ] do v140=v140   .. v100[v219] ;end v100[v102[1 + 1 ]]=v140;elseif (v103==3) then v100[v102[959 -(892 + 65) ]]=v102[7 -4 ]~=0 ;else local v231=0;local v232;local v233;local v234;local v235;while true do if (v231==0) then v232=v102[2];v233,v234=v93(v100[v232](v100[v232 + 1 ]));v231=1;end if (v231==1) then v95=(v234 + v232) -1 ;v235=0 -0 ;v231=2;end if (v231==2) then for v373=v232,v95 do local v374=0;while true do if (v374==0) then v235=v235 + 1 ;v100[v373]=v233[v235];break;end end end break;end end end elseif (v103<=6) then if (v103==5) then do return;end else local v142=0;local v143;while true do if (v142==0) then v143=v102[2];do return v21(v100,v143,v95);end break;end end end elseif (v103<=(12 -5)) then v100[v102[2]]=v74[v102[3]];elseif (v103==8) then local v236=v91[v102[3]];local v237;local v238={};v237=v18({},{[v7("\127\133\93\184\181\67\88","\38\32\218\52\214\209")]=function(v302,v303) local v304=0;local v305;while true do if (v304==0) then v305=v238[v303];return v305[1][v305[2]];end end end,[v7("\40\14\166\75\0\56\166\74\18\41","\46\119\81\200")]=function(v306,v307,v308) local v309=0;local v310;while true do if (v309==0) then v310=v238[v307];v310[1][v310[2]]=v308;break;end end end});for v311=1,v102[4] do local v312=0;local v313;while true do if (v312==1) then if (v313[1]==41) then v238[v311-1 ]={v100,v313[3]};else v238[v311-1 ]={v74,v313[3]};end v99[ #v99 + 1 ]=v238;break;end if (v312==0) then v94=v94 + (351 -(87 + 263)) ;v313=v90[v94];v312=1;end end end v100[v102[2]]=v40(v236,v237,v75);else local v240=v102[2];v100[v240]=v100[v240]();end elseif (v103<=14) then if (v103<=11) then if (v103==10) then v100[v102[2]]=v102[3] + v100[v102[4]] ;else v100[v102[2]]();end elseif (v103<=12) then v100[v102[2]][v102[3]]=v100[v102[4]];elseif (v103>13) then local v242=0;local v243;while true do if (0==v242) then v243=v102[2];v100[v243]=v100[v243](v21(v100,v243 + 1 ,v102[3]));break;end end else v100[v102[2]]=v100[v102[3]] + v102[4] ;end elseif (v103<=16) then if (v103>15) then if  not v100[v102[2]] then v94=v94 + 1 ;else v94=v102[3];end elseif (v100[v102[2]]==v102[3 + 1 ]) then v94=v94 + 1 ;else v94=v102[3];end elseif (v103<=17) then v100[v102[2]]=v100[v102[3]][v102[4]];elseif (v103==(44 -26)) then v100[v102[2]]=v100[v102[3]] + v102[4] ;else local v248=0;local v249;local v250;local v251;while true do if (v248==1) then v251=v100[v249 + 2 ];if (v251>0) then if (v250>v100[v249 + 1 ]) then v94=v102[3 + 0 ];else v100[v249 + 3 ]=v250;end elseif (v250<v100[v249 + 1 ]) then v94=v102[3];else v100[v249 + 3 ]=v250;end break;end if (v248==0) then v249=v102[2];v250=v100[v249];v248=1;end end end elseif (v103<=29) then if (v103<=24) then if (v103<=21) then if (v103==20) then v100[v102[2]]=v100[v102[3]]%v102[4] ;else local v152=0;local v153;while true do if (v152==0) then v153=v102[2];v100[v153]=v100[v153](v21(v100,v153 + 1 ,v102[3]));break;end end end elseif (v103<=22) then v100[v102[2]]=v100[v102[3]]%v102[4] ;elseif (v103==23) then local v252=0;local v253;while true do if (v252==0) then v253=v102[2];v100[v253](v21(v100,v253 + 1 ,v102[3]));break;end end else v100[v102[2]][v100[v102[3]]]=v100[v102[4]];end elseif (v103<=(103 -77)) then if (v103>25) then local v155=v102[2];local v156,v157=v93(v100[v155](v21(v100,v155 + 1 ,v95)));v95=(v157 + v155) -1 ;local v158=0;for v220=v155,v95 do v158=v158 + 1 ;v100[v220]=v156[v158];end else v100[v102[2]]=v102[955 -(802 + 150) ] + v100[v102[4]] ;end elseif (v103<=27) then local v160=0;local v161;while true do if (v160==0) then v161=v102[2];do return v100[v161](v21(v100,v161 + 1 ,v102[3]));end break;end end elseif (v103==(75 -47)) then local v256=0;local v257;while true do if (0==v256) then v257=v102[2];do return v100[v257](v21(v100,v257 + 1 ,v102[5 -2 ]));end break;end end else local v258=v102[2];v100[v258](v21(v100,v258 + 1 ,v95));end elseif (v103<=34) then if (v103<=31) then if (v103==30) then local v162=0;local v163;local v164;local v165;while true do if (v162==1) then v165=v100[v163] + v164 ;v100[v163]=v165;v162=2;end if (v162==2) then if (v164>0) then if (v165<=v100[v163 + 1 ]) then v94=v102[3];v100[v163 + 3 ]=v165;end elseif (v165>=v100[v163 + 1 ]) then v94=v102[3];v100[v163 + 3 ]=v165;end break;end if (v162==0) then v163=v102[2];v164=v100[v163 + 2 ];v162=1;end end else local v166=0;local v167;local v168;while true do if (1==v166) then for v348=v167 + 1 ,v95 do v15(v168,v100[v348]);end break;end if (v166==0) then v167=v102[2];v168=v100[v167];v166=1;end end end elseif (v103<=32) then v100[v102[2]]=v40(v91[v102[3]],nil,v75);elseif (v103==33) then v100[v102[2]]=v102[3]~=0 ;else v100[v102[2]][v102[3]]=v100[v102[3 + 1 ]];end elseif (v103<=36) then if (v103==35) then v100[v102[2]]=v102[3];else local v172=0;local v173;while true do if (0==v172) then v173=v102[2];do return v21(v100,v173,v95);end break;end end end elseif (v103<=37) then v100[v102[2]]=v75[v102[3]];elseif (v103>38) then v100[v102[2]][v100[v102[3]]]=v102[1001 -(915 + 82) ];else do return;end end elseif (v103<=59) then if (v103<=(138 -89)) then if (v103<=44) then if (v103<=41) then if (v103>40) then v100[v102[2]]=v100[v102[3]];elseif  not v100[v102[2]] then v94=v94 + 1 ;else v94=v102[3];end elseif (v103<=42) then local v178=v102[2 + 0 ];local v179=v100[v178 + 2 ];local v180=v100[v178] + v179 ;v100[v178]=v180;if (v179>0) then if (v180<=v100[v178 + 1 ]) then v94=v102[3];v100[v178 + 3 ]=v180;end elseif (v180>=v100[v178 + 1 ]) then local v351=0;while true do if (v351==0) then v94=v102[3];v100[v178 + 3 ]=v180;break;end end end elseif (v103==43) then local v265=0;local v266;local v267;while true do if (v265==0) then v266=v102[2];v267=v100[v266];v265=1;end if (v265==1) then for v380=v266 + 1 ,v95 do v15(v267,v100[v380]);end break;end end else for v323=v102[2],v102[3] do v100[v323]=nil;end end elseif (v103<=46) then if (v103>45) then v100[v102[2]]={};else v100[v102[2]][v100[v102[3]]]=v102[4];end elseif (v103<=47) then v100[v102[2]]=v100[v102[3]]%v100[v102[4]] ;elseif (v103>48) then v100[v102[2]]=v100[v102[3 -0 ]]%v100[v102[4]] ;else local v269=0;local v270;local v271;while true do if (v269==0) then v270=v102[3];v271=v100[v270];v269=1;end if (1==v269) then for v381=v270 + 1 ,v102[4] do v271=v271   .. v100[v381] ;end v100[v102[2]]=v271;break;end end end elseif (v103<=54) then if (v103<=51) then if (v103>(1237 -(1069 + 118))) then v100[v102[2]]=v100[v102[3]][v102[4]];elseif (v100[v102[2]]==v102[4]) then v94=v94 + 1 ;else v94=v102[3];end elseif (v103<=52) then v100[v102[2]][v100[v102[6 -3 ]]]=v100[v102[4]];elseif (v103>53) then local v273=0;local v274;while true do if (v273==0) then v274=v102[3 -1 ];v100[v274]=v100[v274](v21(v100,v274 + 1 ,v95));break;end end else local v275=v102[2];v100[v275](v21(v100,v275 + 1 ,v95));end elseif (v103<=56) then if (v103==55) then v100[v102[2]]={};else v100[v102[2]]=v100[v102[3]];end elseif (v103<=57) then do return v100[v102[2]]();end elseif (v103==58) then local v276=0;local v277;local v278;local v279;local v280;while true do if (v276==0) then v277=v102[1 + 1 ];v278,v279=v93(v100[v277](v21(v100,v277 + 1 ,v102[4 -1 ])));v276=1;end if (v276==1) then v95=(v279 + v277) -1 ;v280=0 + 0 ;v276=2;end if (v276==2) then for v382=v277,v95 do local v383=0;while true do if (v383==0) then v280=v280 + 1 ;v100[v382]=v278[v280];break;end end end break;end end else v100[v102[2]]= #v100[v102[794 -(368 + 423) ]];end elseif (v103<=69) then if (v103<=64) then if (v103<=61) then if (v103==(188 -128)) then do return v100[v102[2]]();end else for v223=v102[2],v102[3] do v100[v223]=nil;end end elseif (v103<=(80 -(10 + 8))) then local v193=0;local v194;local v195;local v196;while true do if (v193==1) then v196=v100[v194 + 2 ];if (v196>(0 -0)) then if (v195>v100[v194 + 1 ]) then v94=v102[3];else v100[v194 + 3 ]=v195;end elseif (v195<v100[v194 + 1 ]) then v94=v102[3];else v100[v194 + (445 -(416 + 26)) ]=v195;end break;end if (v193==0) then v194=v102[2];v195=v100[v194];v193=1;end end elseif (v103>63) then v100[v102[2]]=v74[v102[3]];else v100[v102[6 -4 ]]=v102[3];end elseif (v103<=66) then if (v103==65) then local v197=0;local v198;local v199;while true do if (1==v197) then v100[v198 + 1 ]=v199;v100[v198]=v199[v102[4]];break;end if (v197==0) then v198=v102[2];v199=v100[v102[3]];v197=1;end end elseif v100[v102[2]] then v94=v94 + 1 ;else v94=v102[3];end elseif (v103<=67) then local v200=v102[1 + 1 ];local v201,v202=v93(v100[v200](v21(v100,v200 + 1 ,v95)));v95=(v202 + v200) -(1 -0) ;local v203=0;for v225=v200,v95 do local v226=0;while true do if (v226==0) then v203=v203 + (439 -(145 + 293)) ;v100[v225]=v201[v203];break;end end end elseif (v103>68) then v94=v102[3];else local v288=0;local v289;while true do if (0==v288) then v289=v102[2];v100[v289](v21(v100,v289 + 1 ,v102[3]));break;end end end elseif (v103<=74) then if (v103<=71) then if (v103>70) then if v100[v102[2]] then v94=v94 + 1 ;else v94=v102[3];end else local v204=0;local v205;local v206;local v207;local v208;while true do if (v204==1) then v95=(v207 + v205) -1 ;v208=0;v204=2;end if (v204==0) then v205=v102[2];v206,v207=v93(v100[v205](v21(v100,v205 + 1 ,v102[3])));v204=1;end if (v204==2) then for v354=v205,v95 do local v355=0;while true do if (v355==0) then v208=v208 + 1 ;v100[v354]=v206[v208];break;end end end break;end end end elseif (v103<=(502 -(44 + 386))) then local v209=v102[2];local v210,v211=v93(v100[v209](v100[v209 + 1 ]));v95=(v211 + v209) -(1487 -(998 + 488)) ;local v212=0;for v227=v209,v95 do v212=v212 + 1 + 0 ;v100[v227]=v210[v212];end elseif (v103==73) then v100[v102[2]]=v40(v91[v102[3]],nil,v75);else v100[v102[2]]=v75[v102[3]];end elseif (v103<=76) then if (v103==75) then local v213=0;local v214;while true do if (v213==0) then v214=v102[2];v100[v214]=v100[v214]();break;end end else local v215=v102[2 + 0 ];v100[v215]=v100[v215](v21(v100,v215 + 1 ,v95));end elseif (v103<=(849 -(201 + 571))) then v94=v102[3];elseif (v103>(1216 -(116 + 1022))) then local v294=v91[v102[3]];local v295;local v296={};v295=v18({},{[v7("\122\243\63\37\136\181\93","\208\37\172\86\75\236")]=function(v336,v337) local v338=0;local v339;while true do if (0==v338) then v339=v296[v337];return v339[1][v339[8 -6 ]];end end end,[v7("\150\130\225\142\187\160\179\235\142\180","\204\201\221\143\235")]=function(v340,v341,v342) local v343=0;local v344;while true do if (v343==0) then v344=v296[v341];v344[1][v344[2]]=v342;break;end end end});for v345=1,v102[4] do local v346=0;local v347;while true do if (0==v346) then v94=v94 + 1 + 0 ;v347=v90[v94];v346=1;end if (v346==1) then if (v347[1]==41) then v296[v345-1 ]={v100,v347[3]};else v296[v345-1 ]={v74,v347[3]};end v99[ #v99 + 1 ]=v296;break;end end end v100[v102[2]]=v40(v294,v295,v75);else v100[v102[7 -5 ]]= #v100[v102[3]];end v94=v94 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
